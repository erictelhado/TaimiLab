services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: taimilab-postgres
    environment:
      POSTGRES_USER: taimilab
      POSTGRES_PASSWORD: taimilab123
      POSTGRES_DB: taimilab_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - taimilab-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U taimilab -d taimilab_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: taimilab-backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_URL=postgresql://taimilab:taimilab123@postgres:5432/taimilab_db
      - POSTGRES_USER=taimilab
      - POSTGRES_PASSWORD=taimilab123
      - POSTGRES_DB=taimilab_db
      - SECRET_KEY=taimilab-super-secret-key-change-in-production-2024
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,http://100.113.79.96:3000
      - ENVIRONMENT=development
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - taimilab-network
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: taimilab-frontend
    ports:
      - "3000:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://100.113.79.96:8000
    depends_on:
      - backend
    networks:
      - taimilab-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  taimilab-network:
    driver: bridge
